name: Test
on:
  workflow_dispatch:
  pull_request:
  push:
jobs:
  test-package:
    name: Test Package
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.2.2

      - name: Setup pnpm
        uses: threeal/setup-pnpm-action@v1.0.0

      - name: Install Dependencies
        run: pnpm install

      - name: Test Package
        run: pnpm test

  test-this-action-save-file:
    name: Test This Action to Save File
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4.2.2
        with:
          path: cache-action
          sparse-checkout: |
            dist
            action.yml
          sparse-checkout-cone-mode: false

      - name: Clone Sample
        shell: bash
        run: git clone https://github.com/opencv/opencv.git

      - name: Save Cache
        id: save-cache
        uses: ./cache-action
        with:
          key: benchmark-this-action-${{ matrix.os }}
          version: ${{ github.run_id }}
          files: opencv

      - name: Check Output
        shell: bash
        run: test "${{ steps.save-cache.outputs.restored }}" == "false"

  test-this-action-restore-file:
    name: Test This Action to Restore File
    needs: test-this-action-save-file
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4.2.2
        with:
          path: cache-action
          sparse-checkout: |
            dist
            action.yml
          sparse-checkout-cone-mode: false

      - name: Restore Cache
        id: restore-cache
        uses: ./cache-action
        with:
          key: benchmark-this-action-${{ matrix.os }}
          version: ${{ github.run_id }}
          files: opencv

      - name: Check Output
        shell: bash
        run: test "${{ steps.restore-cache.outputs.restored }}" == "true"

      - name: Check Sample
        shell: bash
        run: git -C opencv status

  test-cache-action-save-file:
    name: Test Cache Action to Save File
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    steps:
      - name: Clone Sample
        shell: bash
        run: git clone https://github.com/opencv/opencv.git

      - name: Save Cache
        id: save-cache
        uses: actions/cache@v4.2.0
        with:
          key: benchmark-cache-action-${{ matrix.os }}-${{ github.run_id }}
          path: opencv

      - name: Check Output
        shell: bash
        run: test "${{ steps.save-cache.outputs.cache-hit }}" == ""

  test-cache-action-restore-file:
    name: Test Cache Action to Restore File
    needs: test-cache-action-save-file
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4.1.7
        with:
          path: cache-action
          sparse-checkout: |
            action.yml
            dist
          sparse-checkout-cone-mode: false

      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v4.2.0
        with:
          key: benchmark-cache-action-${{ matrix.os }}-${{ github.run_id }}
          path: opencv

      - name: Check Output
        shell: bash
        run: test "${{ steps.restore-cache.outputs.cache-hit }}" == "true"

      - name: Check Sample
        shell: bash
        run: git -C opencv status
